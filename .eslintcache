[{"C:\\Users\\thth1\\Desktop\\lex\\lexberry\\src\\index.js":"1","C:\\Users\\thth1\\Desktop\\lex\\lexberry\\src\\App.jsx":"2","C:\\Users\\thth1\\Desktop\\lex\\lexberry\\src\\components\\customer\\Customer.jsx":"3","C:\\Users\\thth1\\Desktop\\lex\\lexberry\\src\\components\\applicants\\Applicants.jsx":"4"},{"size":219,"mtime":1608085118057,"results":"5","hashOfConfig":"6"},{"size":1259,"mtime":1608096574171,"results":"7","hashOfConfig":"6"},{"size":4263,"mtime":1608187408850,"results":"8","hashOfConfig":"6"},{"size":287,"mtime":1608096489730,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l60423",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\thth1\\Desktop\\lex\\lexberry\\src\\index.js",[],"C:\\Users\\thth1\\Desktop\\lex\\lexberry\\src\\App.jsx",[],"C:\\Users\\thth1\\Desktop\\lex\\lexberry\\src\\components\\customer\\Customer.jsx",["18"],"C:\\Users\\thth1\\Desktop\\lex\\lexberry\\src\\components\\applicants\\Applicants.jsx",[],{"ruleId":"19","severity":1,"message":"20","line":35,"column":9,"nodeType":"21","endLine":51,"endColumn":4,"suggestions":"22"},"react-hooks/exhaustive-deps","The 'getCustomers' function makes the dependencies of useEffect Hook (at line 88) change on every render. To fix this, wrap the definition of 'getCustomers' in its own useCallback() Hook.","VariableDeclarator",["23"],{"desc":"24","fix":"25"},"Wrap the definition of 'getCustomers' in its own useCallback() Hook.",{"range":"26","text":"27"},[1292,1841],"useCallback((searchName) => {\r\n    axios\r\n      .get(`https://lexberry.com.ua/api/v1/clients`, {\r\n        params: { 'search[name]': searchName },\r\n      })\r\n      .then((res) => {\r\n        // Если элементов нет, приходит res.data.message\r\n        // с сообщением что нет элементов. Поэтому делаем проверку что пришли items\r\n        if (res.data.items) {\r\n          if (!defaultCustomers) {\r\n            setDefaultCustomers(res.data.items);\r\n          }\r\n          setCustomers(res.data.items);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  })"]